{"version":3,"sources":["components/Person.js","components/PersonsList.js","components/FilterForm.js","components/Message.js","services/names.js","App.js","index.js"],"names":["Person","props","person","name","number","onClick","handler","PersonsList","regex","RegExp","reg","persons","filter","test","map","key","Filterform","value","onChange","Notification","message","status","className","baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","errorMessage","setErrorMessage","newMessage","setNewMessage","useEffect","nameService","initialNames","FilterForm","event","target","onSubmit","preventDefault","undefined","find","returnedName","concat","setTimeout","catch","error","console","log","window","confirm","n","changedName","note","type","returnedPerson","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.beb5f3f6.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Person = (props) => {\r\n\r\n    return(\r\n      <p>\r\n        {props.person.name} {props.person.number} <button onClick={() =>props.handler(props.person)}>delete</button>\r\n      </p>\r\n    )\r\n  }\r\n\r\n  export default Person","import React from 'react'\r\nimport Person from './Person'\r\n\r\nconst PersonsList = (props) => {\r\n    // console.log(props)\r\nconst regex = new RegExp(props.reg, \"i\")\r\nreturn props.persons.filter(person => regex.test(person.name)).map(person => <Person key={person.name} person={person} handler={props.handler} />)\r\n}\r\n\r\nexport default PersonsList","import React from \"react\";\r\n\r\nconst Filterform = (props) => {\r\n    return ( \r\n        <div>\r\n        filter shown with < input \r\n        value = {props.filter} \r\n        onChange = {props.handler} />\r\n        </div>\r\n    )}\r\n\r\nexport default Filterform","import React from 'react'\r\n\r\nconst Notification = ({ message, status }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n    \r\n    if (status== \"message\") {\r\n        return (\r\n            <div className=\"message\">\r\n            {message}\r\n        </div>\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"error\">\r\n          {message}\r\n        </div>\r\n      )\r\n    \r\n  }\r\n\r\n  export default Notification","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deleteName = (person) => {\r\n    const request = axios.delete(`${baseUrl}/${person.id}`)\r\n    return request.then(response => person)\r\n}\r\n\r\nexport default {\r\n    getAll: getAll,\r\n    create: create,\r\n    update: update,\r\n    deleteName: deleteName\r\n}","import React, { useState, useEffect } from 'react'\nimport PersonsList from './components/PersonsList'\nimport FilterForm from './components/FilterForm'\nimport Notification from './components/Message'\nimport axios from 'axios'\nimport nameService from './services/names'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [newMessage, setNewMessage] = useState(null)\n\n  useEffect(() => {\n    nameService\n      .getAll()\n      .then(initialNames => {\n        setPersons(initialNames)\n      })\n  }, [])\n\n\n\nconst addName = (event) => {\n  event.preventDefault()\n  if (persons.find(({name}) => name === newName)===undefined) {\n    const nameObject = {\n      name: newName,\n      number: newNumber\n    }\n    \n    nameService\n      .create(nameObject)\n      .then(returnedName => {\n        setPersons(persons.concat(returnedName))\n        // console.log(returnedName.name)\n        setNewMessage(\n          `Name '${returnedName.name}' was succesfully added to server`\n        )\n        setTimeout(() => {\n          setNewMessage(null)\n        }, 5000)\n        setNewName('')\n        setNewNumber('')\n      })\n      .catch(error => {\n        console.log(error)\n        console.log(error.response.data)\n        setErrorMessage(\n          `'${error.response.data.error}'`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      })\n  } else {\n    if (window.confirm(`Are you sure you want to update number of ${newName}?`)){\n      const id = (persons.find(({name}) => name === newName)).id\n      // const url = `http://localhost:3001/persons/${x}`\n      const name = persons.find(n => n.id === id)\n      const changedName = { ...name, number: newNumber }\n\n\n      nameService\n      .update(id, changedName)\n        .then(response => {\n          console.log(response)\n          console.log(persons)\n          setPersons(persons.map(note => note.id !== id ? note : response))\n          setNewMessage(\n            `Number of '${response.name}' was succesfully updated to server`\n          )\n          setTimeout(() => {\n            setNewMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n        // console.log('fail')\n        setErrorMessage(\n          `'${error.response.data.error}'`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        })\n    }\n  }\n}\n\nconst handleDeleteClick = (person) => {\n  if (window.confirm(\"Are you sure you want to delete?\")){\n  nameService\n    .deleteName(person)\n    .then(returnedPerson => {\n      console.log(returnedPerson)\n      setPersons(persons.filter(name => name.id !== returnedPerson.id))\n      setNewMessage(\n        `Name '${returnedPerson.name}' was succesfully removed from server`\n      )\n      setTimeout(() => {\n        setNewMessage(null)\n      }, 5000)\n    })\n    .catch(error => {\n      console.log('fail')\n      setErrorMessage(\n        `Name '${person.name}' was already deleted from server`\n      )\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n      })\n  }\n}\n\nconst handleNameChange = (event) => {\n  // console.log(event.target.value)\n  setNewName(event.target.value)\n}\n\nconst handleNumberChange = (event) => {\n  // console.log(event.target.value)\n  setNewNumber(event.target.value)\n}\n\nconst handleFilterChange = (event) => {\n  // console.log(event.target.value)\n  setNewFilter(event.target.value);\n  // const test = 'Arto Hellas'\n  // const regex = new RegExp(event.target.value, \"i\")\n  // console.log(regex)\n  // console.log(regex.test(test))\n}\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={newMessage} status=\"message\" />\n      <Notification message={errorMessage} status=\"error\" />\n      <FilterForm filter={newFilter} handler={handleFilterChange} />\n      <h2>add a new</h2>\n      <form onSubmit={addName}>\n        <div>\n          name: <input \n          value = {newName}\n          onChange={handleNameChange}\n          />\n        </div>\n        <div>\n          number: <input \n          value = {newNumber}\n          onChange={handleNumberChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <div>\n        <PersonsList reg={newFilter} persons={persons} handler={handleDeleteClick} />\n      </div>\n    </div>\n  )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}